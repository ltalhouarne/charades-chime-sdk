AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Charades
Globals:
  Function:
    Runtime: nodejs10.x
    Timeout: 30
    MemorySize: 128
    Layers:
      - !Join
        - ':'
        - - arn:aws:lambda
          - !Ref AWS::Region
          - !Ref AWS::AccountId
          - layer
          - charades-layer
          - 1
    Environment:
      Variables:
        GAMES_TABLE_NAME: !Ref Games
        PLAYERS_TABLE_NAME: !Ref Players
Resources:
  Games:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: GameRoomCode
          AttributeType: S
      KeySchema:
        - AttributeName: GameRoomCode
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
  
  Players:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PlayerId
          AttributeType: S
      KeySchema:
        - AttributeName: PlayerId
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true      

  WebsiteLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda/handlers.website
      Runtime: nodejs10.x
      CodeUri: build/
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /
            Method: GET
        getProxy:
          Type: Api
          Properties:
            Path: '/{proxy+}'
            Method: GET  

  JoinGameRoomLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handlers.joinGameRoom
      Runtime: nodejs10.x
      CodeUri: build/
      Policies:
        - Statement: 
          - Sid: Dynamo
            Action: ['dynamodb:*']
            Effect: Allow
            Resource: ['*']
          - Sid: Chime
            Action: ['chime:*']
            Effect: Allow
            Resource: ['*']   
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /gameroom/join
            Method: POST
  
  GetGameRoomLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handlers.getGameRoom
      Runtime: nodejs10.x
      CodeUri: build/
      Policies:
        - Statement: 
          - Sid: Dynamo
            Action: ['dynamodb:*']
            Effect: Allow
            Resource: ['*']
          - Sid: Chime
            Action: ['chime:*']
            Effect: Allow
            Resource: ['*']   
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /gameroom/details
            Method: POST 

  CreateGameRoomLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handlers.createGameroom
      Runtime: nodejs10.x
      CodeUri: build/
      Policies:
        - Statement: 
          - Sid: Dynamo
            Action: ['dynamodb:*']
            Effect: Allow
            Resource: ['*']
          - Sid: Chime
            Action: ['chime:*']
            Effect: Allow
            Resource: ['*']   
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /gameroom/new
            Method: POST
Outputs:
  ApiURL:
    Description: "API endpoint URL for Prod environment"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
